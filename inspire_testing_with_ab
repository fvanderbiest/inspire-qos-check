#!/bin/bash

BASEURL=https://lb.lb-http.geograndest.caas.camptocamp.com
NUMBER_OF_SAMPLES=100
VECTORLAYER=geor:public_layer
RASTERLAYER=cigal:CIGAL_ORTHORVB_2007_ALSACE_TIFA_CC48

checkTTFB() {
    local path=$1
    local concurrency=$2
    local maximum_time_ms=$3
    echo "Checking $BASEURL$path"
    local ms=`ab -n $NUMBER_OF_SAMPLES -c $concurrency "$BASEURL$path" | grep Processing | rev | cut -f 1 -d ' ' | rev`
    local s=`echo "scale=3;$ms/1000" | bc`

    if [ $ms -gt $maximum_time_ms ]
    then
        echo -e "\033[01;31m[NOK]\033[00m ($s sec)"
    else
        echo -e "\033[1;36m[OK]\033[00m ($s sec)"
    fi 
}

checkTransferRate() {
    local path=$1
    local concurrency=$2
    local minimum_transfer_rate_kb=$3
    echo "Checking $BASEURL$path"
    local kbs=`ab -n $NUMBER_OF_SAMPLES -c $concurrency "$BASEURL$path" | grep Transfer | rev | cut -d ' ' -f 3 | rev` # [Kbytes/sec] received
    local kbsint=`echo $kbs | cut -f 1 -d '.'`
    if [ $kbsint -lt $minimum_transfer_rate_kb ]
    then
        echo -e "\033[01;31m[NOK]\033[00m ($kbs Kbytes/sec)"
    else
        echo -e "\033[1;36m[OK]\033[00m ($kbs Kbytes/sec)"
    fi 
}


checkThroughput() {
    local path=$1
    local concurrency=$2
    echo "Checking $BASEURL$path"
    local rps=`ab -n $NUMBER_OF_SAMPLES -c $concurrency "$BASEURL$path" | grep Requests | rev | cut -d ' ' -f 3 | rev`
    local rpsint=`echo $rps | cut -f 1 -d '.'`
    if [ $rpsint -lt $concurrency ]
    then
        echo -e "\033[01;31m[NOK]\033[00m ($rps requests served per second)"
    else
        echo -e "\033[1;36m[OK]\033[00m ($rps requests served per second)"
    fi
}

namespace=`echo $VECTORLAYER | cut -d ':' -f 1`
layername=`echo $VECTORLAYER | cut -d ':' -f 2`

echo "Testing DOWNLOAD services"
echo ""
echo "[PERF] Maximum 10 seconds to get the first bytes of the WFS service metadata with 10 concurrent requests"
checkTTFB "/geoserver/ows?service=wfs&version=2.0.0&request=GetCapabilities" 10 10000
echo ""

echo "[PERF] Maximum 10 seconds to get the first bytes of the WCS service metadata with 10 concurrent requests"
checkTTFB "/geoserver/ows?service=wcs&version=2.0.0&request=GetCapabilities" 10 10000
echo ""

echo ""
echo "Testing VECTOR DOWNLOAD service"
echo ""

echo "[PERF] Maximum 30 seconds to get the first bytes of a full dataseries with 10 concurrent requests"
checkTTFB "/geoserver/ows?service=WFS&request=GetFeature&typename=$VECTORLAYER&outputformat=shape-zip" 10 30000
echo ""

# FIXME: vector testing should rather rely on 500 features/seconds limit
echo "[CAPACITY] Minimum 512kb/s transfer rate to get a full dataseries with 10 concurrent requests"
checkTransferRate "/geoserver/ows?service=WFS&request=GetFeature&typename=$VECTORLAYER&OUTPUTFORMAT=shape-zip" 10 512
echo ""

echo "[PERF] Maximum 30 seconds to get the first bytes of a single feature with 10 concurrent requests"
checkTTFB "/geoserver/ows?service=WFS&version=2.0.0&request=GetFeature&typename=$VECTORLAYER&count=1" 10 30000
echo ""

echo "[CAPACITY] Minimum 512kb/s transfer rate to get a single feature with 10 concurrent requests"
checkTransferRate "/geoserver/ows?service=WFS&version=2.0.0&request=GetFeature&typename=$VECTORLAYER&count=1" 10 512
echo ""

echo "[PERF] Maximum 10 seconds to get the first bytes of a describe dataseries query with 10 concurrent requests"
checkTTFB "/geoserver/$namespace/$layername/ows?service=WFS&request=GetCapabilities" 10 10000
echo ""

echo "[PERF] Maximum 10 seconds to get the first bytes of a describe featuretype query with 10 concurrent requests"
checkTTFB "/geoserver/ows?service=WFS&version=2.0.0&request=DescribeFeatureType&typename=$VECTORLAYER" 10 10000
echo ""

echo "[CAPACITY] Minimum 10 simultaneous service requests served per second"
checkThroughput "/geoserver/ows?service=WFS&request=GetFeature&typename=$VECTORLAYER&OUTPUTFORMAT=shape-zip" 10
echo ""


echo ""
echo "Testing RASTER DOWNLOAD service"
echo ""


#~ For the Get Spatial Data Set operation and for the Get Spatial Object operation, and for a
#~ query consisting exclusively of a bounding box, the response time for sending the initial response shall
#~ be maximum 30 seconds in normal situation
echo "[PERF] Maximum 30 seconds to get the first bytes of a bbox query with 10 concurrent requests"
checkTTFB "/geoserver/ows?service=WCS&version=2.0.1&request=GetCoverage&coverageId=cigal__CIGAL_ORTHORVB_2007_ALSACE_TIFA_CC48&format=image/tiff&subset=N(1985000,1986000)&subset=E(7140000,7141000)" 10 30000
echo ""

#~ then, and still in normal situation, the download service
#~ shall maintain a sustained response greater than 0,5 Megabytes per second or greater than 500
#~ Spatial Objects per second.
echo "[CAPACITY] Minimum 512kb/s transfer rate to get a bbox query with 10 concurrent requests"
checkTransferRate "/geoserver/ows?service=WCS&version=2.0.1&request=GetCoverage&coverageId=cigal__CIGAL_ORTHORVB_2007_ALSACE_TIFA_CC48&format=image/tiff&subset=N(1985000,1986000)&subset=E(7140000,7141000)" 10 512
echo ""

#~ For the Describe Spatial Data Set operation and for the Describe Spatial Object Type
#~ operation, the response time for sending the initial response shall be maximum 10 seconds in normal
#~ situation
echo "[PERF] Maximum 10 seconds to get the first bytes of a describe coverage query with 10 concurrent requests"
checkTTFB "/geoserver/wcs?service=WCS&version=2.0.1&request=describecoverage&coverageid=cigal__CIGAL_ORTHORVB_2007_ALSACE_TIFA_CC48" 10 10000
echo ""



echo ""
echo "Testing VIEW service"
echo ""

echo "[PERF] Maximum 5 seconds to get the first bytes of a 800x600 8 bit bitmap WMS GetMap with 20 concurrent requests"
checkTTFB "/geoserver/ows?SERVICE=WMS&LAYERS=$VECTORLAYER&FORMAT=image/tiff8&VERSION=1.3.0&SLD_VERSION=1.1.0&REQUEST=GetMap&CRS=EPSG:3857&BBOX=-20820223,-20820223,20820223,20820223&WIDTH=800&HEIGHT=600" 20 5000
echo ""

echo "[CAPACITY] Minimum 20 simultaneous service requests served per second"
checkThroughput "/geoserver/ows?SERVICE=WMS&LAYERS=$VECTORLAYER&FORMAT=image/tiff8&VERSION=1.3.0&SLD_VERSION=1.1.0&REQUEST=GetMap&CRS=EPSG:3857&BBOX=-20820223,-20820223,20820223,20820223&WIDTH=800&HEIGHT=600" 20
echo ""
